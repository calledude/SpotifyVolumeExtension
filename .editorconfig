# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = tab
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true

# Parameter preferences
dotnet_code_quality_unused_parameters = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false
dotnet_style_allow_statement_immediately_after_block_experimental = false

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = when_on_single_line:silent
csharp_style_expression_bodied_lambdas = when_on_single_line:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = true:silent
csharp_style_expression_bodied_operators = when_on_single_line:silent
csharp_style_expression_bodied_properties = when_on_single_line:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async
csharp_style_prefer_readonly_struct = true

# Code-block preferences
csharp_prefer_braces = true:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = false:silent

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:silent

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_embedded_statements_on_same_line_experimental = false

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be__camelcase.severity = suggestion
dotnet_naming_rule.private_or_internal_field_should_be__camelcase.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be__camelcase.style = _camelcase

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style._camelcase.required_prefix = _
dotnet_naming_style._camelcase.required_suffix = 
dotnet_naming_style._camelcase.word_separator = 
dotnet_naming_style._camelcase.capitalization = camel_case
csharp_style_prefer_primary_constructors = false:suggestion

[*.{cs,vb}]
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_collection_expression = when_types_exactly_match:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion

# S6605: Collection-specific "Exists" method should be used instead of the "Any" extension
dotnet_diagnostic.S6605.severity = none

# S1075: URIs should not be hardcoded
dotnet_diagnostic.S1075.severity = none
dotnet_style_readonly_field = true:suggestion

# Roslynator settings

roslynator_refactorings.enabled = true
roslynator_compiler_diagnostic_fixes.enabled = true
roslynator_refactoring.remove_all_comments.enabled = true

roslynator_accessibility_modifiers = explicit
# Applicable to: rcs1018

roslynator_accessor_braces_style = single_line_when_expression_is_on_single_line
# Default: multi_line
# Applicable to: rcs0020

roslynator_array_creation_type_style = implicit
# Applicable to: rcs1014

roslynator_arrow_token_new_line = before
# Applicable to: rcs0032

roslynator_binary_operator_new_line = before
# Applicable to: rcs0027

roslynator_blank_line_after_file_scoped_namespace_declaration = true
# Applicable to: rcs0060

roslynator_blank_line_between_closing_brace_and_switch_section = false
# Applicable to: rcs0014, rcs1036

roslynator_conditional_operator_condition_parentheses_style = omit
# Applicable to: rcs1051

roslynator_conditional_operator_new_line = before
# Applicable to: rcs0028

roslynator_configure_await = false
# Applicable to: rcs1090

roslynator_doc_comment_summary_style = multi_line
# Applicable to: rcs1253

roslynator_empty_string_style = field
# Applicable to: rcs1078

roslynator_enum_flag_value_style = shift_operator
# Applicable to: rcs1254

roslynator_enum_has_flag_style = method
# Applicable to: rcs1096

roslynator_infinite_loop_style = while
# Applicable to: rcs1252

roslynator_null_check_style = pattern_matching
# Applicable to: rcs1248

roslynator_null_conditional_operator_new_line = before
# Applicable to: rcs0059

roslynator_object_creation_parentheses_style = omit
# Applicable to: rcs1050

roslynator_object_creation_type_style = implicit
# Applicable to: rcs1250

roslynator_prefix_field_identifier_with_underscore = true

roslynator_trailing_comma_style = include
# Applicable to: rcs1260

roslynator_use_anonymous_function_or_method_group = method_group
# Applicable to: rcs1207

roslynator_use_block_body_when_declaration_spans_over_multiple_lines = true
# Applicable to: rcs1016

roslynator_use_block_body_when_expression_spans_over_multiple_lines = true
# Applicable to: rcs1016

roslynator_use_collection_expression = true
# Applicable to: rcs1014, rcs1250

roslynator_use_var = always
# Applicable to: rcs1264

roslynator_use_var_instead_of_implicit_object_creation = true
# Applicable to: rcs1250


# Analyzers

# Add blank line after embedded statement
dotnet_diagnostic.rcs0001.severity = warning

# Add blank line after using directive list
dotnet_diagnostic.rcs0003.severity = suggestion

# Add blank line between closing brace and next statement
dotnet_diagnostic.rcs0008.severity = suggestion

# Add blank line between declaration and documentation comment
dotnet_diagnostic.rcs0009.severity = suggestion

# Format accessor's braces on a single line or multiple lines
dotnet_diagnostic.rcs0020.severity = suggestion
# Options: roslynator_accessor_braces_style

# Format block's braces on a single line or multiple lines
dotnet_diagnostic.rcs0021.severity = suggestion
# Options: roslynator_block_braces_style

# Put full accessor on its own line
dotnet_diagnostic.rcs0025.severity = warning

# Place new line after/before binary operator
dotnet_diagnostic.rcs0027.severity = suggestion
# Options: roslynator_binary_operator_new_line

# Place new line after/before '?:' operator
dotnet_diagnostic.rcs0028.severity = suggestion
# Options: roslynator_conditional_operator_new_line

# Put enum member on its own line
dotnet_diagnostic.rcs0031.severity = suggestion

# Place new line after/before arrow token
dotnet_diagnostic.rcs0032.severity = suggestion
# Options: roslynator_arrow_token_new_line

# Put statement on its own line
dotnet_diagnostic.rcs0033.severity = error

# Put type parameter constraint on its own line
dotnet_diagnostic.rcs0034.severity = suggestion

# Remove new line between 'if' keyword and 'else' keyword
dotnet_diagnostic.rcs0041.severity = warning

# Put auto-accessors on a single line
dotnet_diagnostic.rcs0042.severity = suggestion

# Fix formatting of a binary expression chain
dotnet_diagnostic.rcs0055.severity = suggestion

# Place new line after/before null-conditional operator
dotnet_diagnostic.rcs0059.severity = suggestion
# Options: roslynator_null_conditional_operator_new_line

# Add/remove line after file scoped namespace declaration
dotnet_diagnostic.rcs0060.severity = suggestion
# Options: roslynator_blank_line_after_file_scoped_namespace_declaration

# Simplify nested using statement
dotnet_diagnostic.rcs1005.severity = suggestion

# Use predefined type
dotnet_diagnostic.rcs1013.severity = suggestion

# Use explicitly/implicitly typed array
dotnet_diagnostic.rcs1014.severity = suggestion
# Options: roslynator_array_creation_type_style, roslynator_use_collection_expression

# Use block body or expression body
dotnet_diagnostic.rcs1016.severity = suggestion
# Options: roslynator_body_style, roslynator_use_block_body_when_declaration_spans_over_multiple_lines, roslynator_use_block_body_when_expression_spans_over_multiple_lines

# Add/remove accessibility modifiers
dotnet_diagnostic.rcs1018.severity = suggestion
# Options: roslynator_accessibility_modifiers

# Order modifiers
dotnet_diagnostic.rcs1019.severity = suggestion

# Remove 'partial' modifier from type with a single part
dotnet_diagnostic.rcs1043.severity = warning

# Include/omit parentheses when creating new object
dotnet_diagnostic.rcs1050.severity = suggestion
# Options: roslynator_object_creation_parentheses_style

# Add/remove parentheses from condition in conditional operator
dotnet_diagnostic.rcs1051.severity = suggestion
# Options: roslynator_conditional_operator_condition_parentheses_style

# Unnecessary semicolon at the end of declaration
dotnet_diagnostic.rcs1055.severity = suggestion

# Remove redundant constructor
dotnet_diagnostic.rcs1074.severity = suggestion

# Use "" or 'string.Empty'
dotnet_diagnostic.rcs1078.severity = suggestion
# Options: roslynator_empty_string_style

# Use 'Count/Length' property instead of 'Any' method
dotnet_diagnostic.rcs1080.severity = suggestion

# Split variable declaration
dotnet_diagnostic.rcs1081.severity = suggestion

# Add/remove 'ConfigureAwait(false)' call
dotnet_diagnostic.rcs1090.severity = suggestion
# Options: roslynator_configure_await

# Declare using directive on top level
dotnet_diagnostic.rcs1094.severity = suggestion

# Use 'HasFlag' method or bitwise operator
dotnet_diagnostic.rcs1096.severity = suggestion
# Options: roslynator_enum_has_flag_style

# Declare type inside namespace
dotnet_diagnostic.rcs1110.severity = warning

# Add braces to if-else
dotnet_diagnostic.rcs1126.severity = suggestion

# Bitwise operation on enum without Flags attribute
dotnet_diagnostic.rcs1130.severity = warning

# Remove redundant Dispose/Close call
dotnet_diagnostic.rcs1133.severity = warning

# Remove redundant statement
dotnet_diagnostic.rcs1134.severity = suggestion

# Add exception to documentation comment
dotnet_diagnostic.rcs1140.severity = warning

# Value type object is never equal to null
dotnet_diagnostic.rcs1166.severity = warning

# Parameter name differs from base name
dotnet_diagnostic.rcs1168.severity = suggestion

# Remove redundant auto-property initialization
dotnet_diagnostic.rcs1188.severity = suggestion

# Avoid unnecessary boxing of value type
dotnet_diagnostic.rcs1198.severity = suggestion

# Avoid NullReferenceException
dotnet_diagnostic.rcs1202.severity = warning

# Use anonymous function or method group
dotnet_diagnostic.rcs1207.severity = suggestion
# Options: roslynator_use_anonymous_function_or_method_group

# Reduce 'if' nesting
dotnet_diagnostic.rcs1208.severity = suggestion

# Use async/await when necessary
dotnet_diagnostic.rcs1229.severity = warning

# Duplicate enum value
dotnet_diagnostic.rcs1234.severity = warning

# Avoid nested ?: operators
dotnet_diagnostic.rcs1238.severity = warning

# Normalize null check
dotnet_diagnostic.rcs1248.severity = suggestion
# Options: roslynator_null_check_style

# Use implicit/explicit object creation
dotnet_diagnostic.rcs1250.severity = suggestion
# Options: roslynator_object_creation_type_style, roslynator_use_collection_expression, roslynator_use_var_instead_of_implicit_object_creation

# Simplify argument null check
dotnet_diagnostic.rcs1255.severity = suggestion

# Add/remove trailing comma
dotnet_diagnostic.rcs1260.severity = suggestion
# Options: roslynator_trailing_comma_style

# Use 'var' or explicit type
dotnet_diagnostic.rcs1264.severity = suggestion
# Options: roslynator_use_var

# Refactorings

roslynator_refactoring.replace_method_with_property.enabled = true
roslynator_refactoring.use_string_empty_instead_of_empty_string_literal.enabled = true